const i={VOCABULARY_DATA:"vocabularyData",USER_CONFIG:"userConfig",LEARNING_STATS:"learningStats",REVIEW_HISTORY:"reviewHistory"};chrome.runtime.onInstalled.addListener(async()=>{console.log("Hindi Language Learner extension installed/updated");try{await s(),await c(),await l(),console.log("Extension initialization complete")}catch(e){console.error("Error during extension initialization:",e)}});async function s(){if(!(await chrome.storage.local.get([i.USER_CONFIG]))[i.USER_CONFIG]){const t={ttsVoice:"Google Hindi",speechRate:.8,speechPitch:1,notificationsEnabled:!0,quietHoursStart:22,quietHoursEnd:8,targetLanguage:"hi-IN",newWordRepetitions:3};await chrome.storage.local.set({[i.USER_CONFIG]:t}),console.log("Default configuration initialized")}}async function c(){await chrome.alarms.clear("dailyReviewCheck");const e=new Date,t=new Date;t.setHours(9,0,0,0),t<=e&&t.setDate(t.getDate()+1),await chrome.alarms.create("dailyReviewCheck",{when:t.getTime(),periodInMinutes:24*60}),console.log("Daily review alarm scheduled for:",t.toLocaleString())}async function l(){const e=await chrome.storage.local.get([i.VOCABULARY_DATA]);if(!e[i.VOCABULARY_DATA]||e[i.VOCABULARY_DATA].length===0){const t=[{id:"1",targetLanguageWord:"नमस्ते",englishTranslation:"Hello/Goodbye",tags:["greetings","basic"],srsData:{nextReviewDate:Date.now(),interval:1,repetitions:0,easeFactor:2.5,lastReviewed:0,createdAt:Date.now(),updatedAt:Date.now()}},{id:"2",targetLanguageWord:"धन्यवाद",englishTranslation:"Thank you",tags:["gratitude","basic"],srsData:{nextReviewDate:Date.now(),interval:1,repetitions:0,easeFactor:2.5,lastReviewed:0,createdAt:Date.now(),updatedAt:Date.now()}},{id:"3",targetLanguageWord:"कृपया",englishTranslation:"Please",tags:["politeness","basic"],srsData:{nextReviewDate:Date.now(),interval:1,repetitions:0,easeFactor:2.5,lastReviewed:0,createdAt:Date.now(),updatedAt:Date.now()}}];await chrome.storage.local.set({[i.VOCABULARY_DATA]:t});const a={totalItems:t.length,dueToday:t.length,newToday:t.length,reviewedToday:0,accuracyRate:0,streak:0,totalReviews:0};await chrome.storage.local.set({[i.LEARNING_STATS]:a}),console.log("Sample vocabulary initialized")}}chrome.alarms.onAlarm.addListener(async e=>{e.name==="dailyReviewCheck"&&(console.log("Daily review check triggered"),await u())});async function u(){try{const e=await chrome.storage.local.get([i.VOCABULARY_DATA,i.USER_CONFIG]),t=e[i.VOCABULARY_DATA]||[],a=e[i.USER_CONFIG];if(!(a!=null&&a.notificationsEnabled)){console.log("Notifications are disabled");return}const o=new Date().getHours();if(a.quietHoursStart<=a.quietHoursEnd){if(o>=a.quietHoursStart&&o<a.quietHoursEnd){console.log("In quiet hours, skipping notification");return}}else if(o>=a.quietHoursStart||o<a.quietHoursEnd){console.log("In quiet hours, skipping notification");return}const n=t.filter(r=>r.srsData.nextReviewDate<=Date.now());n.length>0?await d(n.length):console.log("No reviews due today")}catch(e){console.error("Error checking due reviews:",e)}}async function d(e){const t={type:"basic",iconUrl:"assets/icon-128.png",title:"Hindi Learning Time! 📚",message:`You have ${e} word${e>1?"s":""} to review. Keep up your learning streak!`,buttons:[{title:"Start Review"},{title:"Later"}]},a=await chrome.notifications.create("reviewReminder",t);console.log("Review notification sent:",a)}chrome.notifications.onClicked.addListener(async e=>{e==="reviewReminder"&&(await chrome.action.openPopup(),await chrome.notifications.clear(e))});chrome.notifications.onButtonClicked.addListener(async(e,t)=>{e==="reviewReminder"&&(t===0&&await chrome.action.openPopup(),await chrome.notifications.clear(e))});
