import{a as p,b as L,S as g}from"./storage.CF9ZhM42.js";import{O as l,L as D,R as C,C as f}from"../popup/popup.js";const w={wordsPerDay:10,maxWordsPerLesson:15,minWordsPerLesson:5,autoAdvance:!0,requireSequentialCompletion:!1,preferredCategories:["greetings","numbers","colors","family","food","fruits","vegetables","animals","body","clothing"],skipWeekends:!1,preferredLessonDuration:15};class h{constructor(e={}){this.config={...w,...e}}generateCurriculum(e){const{sourceVocabulary:t,totalDays:r,startDate:s,organizationStrategy:a}=e;if(!t||t.length===0)throw new Error("Source vocabulary cannot be empty");const o=this.organizeVocabulary(t,a),i=t.length,n=Math.min(Math.max(Math.ceil(i/r),this.config.minWordsPerLesson),this.config.maxWordsPerLesson),d=[];let u=0,y=1;for(;u<o.length&&y<=r;){const m=o.slice(u,u+n);if(m.length===0)break;const b=this.createDailyLesson({dayNumber:y,vocabularyItems:m,startDate:new Date(s.getTime()+(y-1)*24*60*60*1e3)});d.push(b),u+=n,y++}return d}createDailyLesson(e){const{dayNumber:t,vocabularyItems:r,startDate:s}=e,a=this.determineLessonCategory(r),o=this.calculateLessonDifficulty(r),i=this.estimateLessonDuration(r.length);return{id:this.generateLessonId(t),dayNumber:t,title:this.generateLessonTitle(a,t),description:this.generateLessonDescription(a,r.length),category:a,vocabularyItems:r,targetWordCount:r.length,estimatedDuration:i,difficultyLevel:o,createdAt:Date.now(),updatedAt:Date.now()}}organizeVocabulary(e,t){switch(t){case l.BY_CATEGORY:return this.organizeByCategory(e);case l.BY_DIFFICULTY:return this.organizeByDifficulty(e);case l.MIXED_CATEGORIES:return this.organizeMixedCategories(e);case l.BY_FREQUENCY:return this.organizeByFrequency(e);case l.CUSTOM_ORDER:return[...e];default:return this.organizeByCategory(e)}}organizeByCategory(e){const t=new Map,r=[];e.forEach(a=>{const o=this.extractPrimaryCategory(a);o?(t.has(o)||t.set(o,[]),t.get(o).push(a)):r.push(a)});const s=[];return this.config.preferredCategories.forEach(a=>{t.has(a)&&(s.push(...t.get(a)),t.delete(a))}),Array.from(t.values()).forEach(a=>{s.push(...a)}),s.push(...r),s}organizeByDifficulty(e){return[...e].sort((t,r)=>{const s=this.calculateWordDifficulty(t),a=this.calculateWordDifficulty(r);return s-a})}organizeMixedCategories(e){const t=this.organizeByCategory(e),r=[],s=new Map;t.forEach(i=>{const n=this.extractPrimaryCategory(i)||"uncategorized";s.has(n)||s.set(n,[]),s.get(n).push(i)});const a=Array.from(s.values());let o=Math.max(...a.map(i=>i.length));for(let i=0;i<o;i++)a.forEach(n=>{i<n.length&&r.push(n[i])});return r}organizeByFrequency(e){return[...e].sort((t,r)=>{const s=t.targetLanguageWord.length,a=r.targetLanguageWord.length;return s-a})}extractPrimaryCategory(e){if(!e.tags||e.tags.length===0)return null;for(const t of this.config.preferredCategories)if(e.tags.includes(t))return t;return e.tags[0]}calculateWordDifficulty(e){let t=1;const r=e.targetLanguageWord.length;return r>8?t+=2:r>5&&(t+=1),e.srsData.repetitions>5?t-=1:e.srsData.repetitions>2&&(t-=.5),e.srsData.speedLearnStage===p.MASTERED?t-=2:e.srsData.speedLearnStage===p.PASSIVE_LEARNING&&(t-=1),Math.max(1,Math.min(5,t))}calculateLessonDifficulty(e){if(e.length===0)return 1;const t=e.reduce((r,s)=>r+this.calculateWordDifficulty(s),0);return Math.round(t/e.length)}determineLessonCategory(e){if(e.length===0)return"mixed";const t=new Map;e.forEach(a=>{const o=this.extractPrimaryCategory(a)||"uncategorized";t.set(o,(t.get(o)||0)+1)});let r=0,s="mixed";return t.forEach((a,o)=>{a>r&&(r=a,s=o)}),r<=e.length/2?"mixed":s}generateLessonTitle(e,t){const s={greetings:"Greetings & Politeness",numbers:"Numbers & Counting",colors:"Colors & Descriptions",family:"Family & Relationships",food:"Food & Dining",fruits:"Fruits & Natural Foods",vegetables:"Vegetables & Cooking",animals:"Animals & Nature",body:"Body Parts & Health",clothing:"Clothing & Appearance",mixed:"Mixed Vocabulary",uncategorized:"Essential Words"}[e]||"Vocabulary Practice";return`Day ${t}: ${s}`}generateLessonDescription(e,t){return`${{greetings:"Learn essential greetings and polite expressions for daily conversations.",numbers:"Master numbers and counting for practical communication.",colors:"Discover colors and descriptive words to express yourself better.",family:"Build vocabulary around family relationships and social connections.",food:"Explore food-related vocabulary for dining and cooking conversations.",fruits:"Learn names of fruits and natural foods for healthy living discussions.",vegetables:"Master vegetable names and cooking-related vocabulary.",animals:"Discover animal names and nature-related vocabulary.",body:"Learn body parts and health-related expressions.",clothing:"Build vocabulary around clothing and personal appearance.",mixed:"Practice a variety of vocabulary from different categories.",uncategorized:"Essential vocabulary for everyday communication."}[e]||"Expand your Hindi vocabulary with essential words."} This lesson contains ${t} carefully selected words.`}estimateLessonDuration(e){const t=e*1,r=Math.max(5,e*.2);return Math.round(t+r)}generateLessonId(e){return`lesson_day_${e.toString().padStart(3,"0")}_${Date.now()}`}createCurriculumOverview(e){const t=e.reduce((a,o)=>a+o.vocabularyItems.length,0),r=e.reduce((a,o)=>a+o.estimatedDuration,0),s={};return e.forEach(a=>{s[a.category]=(s[a.category]||0)+1}),{totalLessons:e.length,totalVocabulary:t,estimatedTotalDuration:r,lessonsByCategory:s,averageWordsPerLesson:t/e.length,createdAt:Date.now(),updatedAt:Date.now()}}getLessonRecommendations(e,t,r=Date.now()){const s=[],a=new Set(t.filter(n=>n.status===D.COMPLETED||n.status===D.MASTERED).map(n=>n.lessonId)),o=e.find(n=>!a.has(n.id));return o&&s.push({lesson:o,reason:C.NEXT_IN_SEQUENCE,confidence:.9,estimatedTime:o.estimatedDuration,prerequisitesMet:!0}),e.filter(n=>n.vocabularyItems.some(u=>u.srsData.nextReviewDate<=r)&&a.has(n.id)).forEach(n=>{s.push({lesson:n,reason:C.REVIEW_DUE,confidence:.8,estimatedTime:Math.ceil(n.estimatedDuration*.6),prerequisitesMet:!0})}),s.sort((n,d)=>d.confidence-n.confidence).slice(0,3)}static createHindiEasyFruitsVocabulary(){return[["‡§Ö‡§Ç‡§ó‡•Ç‡§∞","Grapes"],["‡§Ö‡§Ç‡§ú‡•Ä‡§∞","Fig"],["‡§Ö‡§ñ‡§∞‡•ã‡§ü","Walnut"],["‡§Ö‡§®‡§®‡•ç‡§®‡§æ‡§∏","Pineapple"],["‡§Ö‡§®‡§æ‡§∞","Pomegranate"],["‡§Ö‡§Æ‡§∞‡•Ç‡§¶","Guava"],["‡§Ü‡§°‡§º‡•Ç","Peach"],["‡§Ü‡§Æ","Mango"],["‡§Ü‡§≤‡•Ç ‡§¨‡•Å‡§ñ‡§æ‡§∞‡§æ","Plum"],["‡§ï‡§ø‡§∂‡§Æ‡§ø‡§∂","Raisin"],["‡§ï‡•á‡§≤‡§æ","Banana"],["‡§ñ‡§∞‡§¨‡•Ç‡§ú‡§æ","Musk melon"],["‡§ñ‡•Å‡§¨‡§æ‡§®‡•Ä","Apricot"],["‡§ö‡§ï‡•ã‡§§‡§∞‡§æ","Pompelmousse"],["‡§ú‡§æ‡§Æ‡•Å‡§®","Rose-apple"],["‡§§‡§∞‡§¨‡•Ç‡§ú","Water melon"],["‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤","Coconut"],["‡§®‡§æ‡§∂‡§™‡§æ‡§§‡•Ä","Pear"],["‡§®‡•Ä‡§Ç‡§¨‡•Ç","Lime"],["‡§™‡§™‡•Ä‡§§‡§æ","Papaya"],["‡§™‡§ø‡§∏‡•ç‡§§‡§æ","Pistachio-nut"],["‡§´‡§æ‡§≤‡§∏‡§æ","Gronia"],["‡§¨‡§æ‡§¶‡§æ‡§Æ","Almond"],["‡§¨‡•á‡§∞","Jujube"],["‡§Æ‡•Ç‡§Ç‡§ó‡§´‡§≤‡•Ä","Ground-nut"],["‡§Æ‡•å‡§∏‡§Æ‡•Ä","Mozambique"],["‡§∂‡§∞‡•Ä‡§´‡§æ","Custard apple"],["‡§∂‡§π‡§§‡•Ç‡§§","Mulberry"],["‡§∏‡§Ç‡§§‡§∞‡§æ","Orange"],["‡§∏‡•á‡§¨","Apple"]].map((r,s)=>({id:`hindieasy_fruits_${s}_${1758133397959}`,targetLanguageWord:r[0],englishTranslation:r[1],tags:["hindieasy","fruits","chapter1","food","natural"],srsData:L.createInitialSRSData()}))}static async createHindiEasyCurriculum(){console.log("üçé Creating HindiEasy curriculum...");const e=this.createHindiEasyFruitsVocabulary();console.log(`üìö Loaded ${e.length} fruit words for Chapter 1`);const r=new h({wordsPerDay:6,maxWordsPerLesson:6,minWordsPerLesson:6,preferredLessonDuration:8}).generateCurriculum({sourceVocabulary:e,totalDays:Math.ceil(e.length/6),startDate:new Date,config:await f.getCurriculumConfig(),organizationStrategy:l.BY_CATEGORY});return console.log(`üìÖ Generated ${r.length} daily lessons for HindiEasy Chapter 1`),r.forEach((s,a)=>{const o=a>0;s.title=o?"Fruits continuation":"Fruits",s.description=o?`Continue learning fruit names in Hindi (Chapter 1, Day ${a+1})`:`Learn essential fruit names in Hindi (Chapter 1, Day ${a+1})`,s.category="hindieasy_fruits"}),r}static createFruitsVocabulary(){return this.createHindiEasyFruitsVocabulary()}}async function E(){try{console.log("üçé Initializing HindiEasy curriculum...");const c=await h.createHindiEasyCurriculum();await f.setDailyLessons(c);const e=new h().createCurriculumOverview(c);await f.setCurriculumOverview(e);for(const a of c)await f.initializeLessonProgress(a.id,a.vocabularyItems.length);console.log("üìù Storing vocabulary items in main storage..."),await g.initialize();const t=new Map;c.forEach(a=>{a.vocabularyItems.forEach(o=>{t.has(o.id)||t.set(o.id,o)})});const r=await g.getVocabulary(),s=new Set(r.map(a=>a.id));for(const a of t.values())try{if(s.has(a.id))await g.updateVocabularyItem(a),console.log(`Updated existing vocabulary item: ${a.id}`);else{const o=await g.getVocabulary();o.push(a),await g.setVocabulary(o),console.log(`Added new vocabulary item: ${a.id}`)}}catch(o){console.warn(`Could not store vocabulary item ${a.id}:`,o)}console.log(`‚úÖ Stored ${t.size} vocabulary items in main storage`),console.log("‚úÖ HindiEasy curriculum initialized successfully!"),console.log(`ÔøΩ Created ${c.length} lessons with ${e.totalVocabulary} fruit words`),console.log("üéØ Users can now start Speed Learn and get automatic curriculum lessons")}catch(c){throw console.error("‚ùå Failed to initialize HindiEasy curriculum:",c),c}}window.initializeHindiEasyCurriculum=E;export{E as initializeHindiEasyCurriculum};
